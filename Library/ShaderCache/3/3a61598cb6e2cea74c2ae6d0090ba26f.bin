.build.project.targets");b.form={},b.target.settings.platform=b.target.settings.platform||{},b.canContinueToNextStep=function(){if(!b.form.android.$valid)return!1;var a=b.target.credentials.signing.credentialid;return!!a&&("__addnew__"!==a||b.form.newcreds.$valid&&b.newCredentials.file)},b.nextStep=function(){var c=e.when(b.selectedCredentialInfo);"__addnew__"===b.target.credentials.signing.credentialid&&(c=h.projects.uploadCredentials(b.orgId,b.projectId,"android",b.newCredentials));var d=g.progress("Saving...");c.then(function(a){return b.updateBuildTargetSettings(b.target,a)}).then(function(c){b.updateBuildTargetInScope(a.targetId,c),b.nextState()}).catch(function(a){if("cancel"!==a){a=_.isObject(a)?a.data.error:a;var b="Failed to update credentials! "+a;g.error(b)}}).finally(function(){d.close()})}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupCredentialsBaseCtrl",["$stateParams","$scope","$state","modals","cloudBuildService","previousState",function(a,b,c,d,e,f){function g(a){b.selectedCredentialInfo={},a&&b.credentials&&"__addnew__"!==a&&(b.selectedCredentialInfo=_.find(b.credentials,{credentialid:a})||{})}var h=b.target.platform;c.go("generic.build.project.setup.target.credentials."+h,{targetId:a.targetId}),b.previousState=f,b.target.credentials.signing.credentialid=b.target.credentials.signing.credentialid||"",b.newCredentials={},b.credOptions=[{credentialid:"",label:"Select",disabled:!0},{credentialid:"__addnew__",label:"Add new provisioning credentials"},{credentialid:"__disabled__",label:"------------------",disabled:!0}],e.projects.listCredentials(b.orgId,b.projectId,h).then(function(a){a=_.sortBy(a,function(a){return a.keystore&&a.keystore.debug?"_":a.label.toLowerCase()}),b.credentials=a,b.credOptions=b.credOptions.concat(a),g(b.target.credentials.signing.credentialid)}).catch(function(a){b.credentials=[],d.error("Failed to list credentials for project!")}),b.$watch("target.credentials.signing.credentialid",function(a,b){g(a)}),b.isEditing=!a.new,b.nextState=function(){b.isEditing?c.go("generic.build.project.targets"):b.startBuilds(b.target.buildtargetid,!1)},b.updateBuildTargetSettings=function(c,d){var f={settings:{platform:c.settings.platform},credentials:{signing:{credentialid:d.credentialid}}};return e.projects.updateBuildTarget(b.orgId,b.projectId,a.targetId,f)}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupCredentialsIosCtrl",["$stateParams","$scope","$state","$q","$controller","modals","utilsService","cloudBuildService",function(a,b,c,d,e,f,g,h){function i(){return f.confirm("Warning","App Store provisioning profile detected. You will not be able to test builds of this project on your device.").result}if(f.close(),"ios"!==b.target.platform)return void c.go("generic.build.project.targets");b.form={},b.target.settings.platform=b.target.settings.platform||{},b.target.settings.platform.xcodeVersion=b.target.settings.platform.xcodeVersion||"latest",b.xcodeVersionCompatible=function(){return!b.availableXcodeVersions||_.includes(b.availableXcodeVersions,b.target.settings.platform.xcodeVersion)},g.waitForScopeValueToLoad(b,"xcodeVersions",500).then(function(){b.availableXcodeVersions=_.map(b.xcodeVersions,"value");var a=_.find(b.unityVersions,{value:b.target.settings.unityVersion});a&&(b.availableXcodeVersions=a.xcode_versions||[])}),b.canContinueToNextStep=function(){if(!b.form.ios.$valid)return!1;var a=b.target.credentials.signing.credentialid;return!!a&&("__addnew__"!==a||b.newCredentials.label&&b.newCredentials.fileProvisioningProfile&&b.newCredentials.fileCertificate)},b.nextStep=function(){var c=d.when(b.selectedCredentialInfo);"__addnew__"===b.target.credentials.signing.credentialid&&(c=h.projects.uploadCredentials(b.orgId,b.projectId,"ios",b.newCredentials));var e=f.progress("Saving..."),g=null;c.then(function(a){return g=a,g.provisioningProfile&&"appstore"===g.provisioningProfile.type?i():d.when(g)}).then(function(){return b.updateBuildTargetSettings(b.target,g)}).then(function(c){b.updateBuildTargetInScope(a.targetId,c),b.nextState()}).catch(function(a){if("cancel"!==a){a=_.isObject(a)?a.data.error:a;var b="Failed to update credentials! "+a;f.error(b)}}).finally(function(){e.close()})}}]),angular.module("ut.cloudbuild.setup").directive("validatebundleidandroid",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){function e(a){d.$setValidity("bundleIdPeriod",!0),d.$setValidity("bundleIdDoublePeriod",!0),d.$setValidity("bundleIdCharacters",!0),d.$setValidity("bundleIdStartPeriod",!0),d.$setValidity("bundleIdEndPeriod",!0),d.$setValidity("bundleIdStartUnderscore",!0),d.$setValidity("bundleIdDash",!0),d.$setValidity("bundleIdPeriodNonLetter",!0),d.$setValidity("bundleIdBeginNonLetter",!0);var c=b.val();c&&0!==c.length&&(c.match(/\./)?c.match(/\.\./)?d.$setValidity("bundleIdDoublePeriod",!1):0===c.indexOf(".")?d.$setValidity("bundleIdStartPeriod",!1):"."===c.substring(c.length-1,c.length)?d.$setValidity("bundleIdEndPeriod",!1):0===c.indexOf("_")?d.$setValidity("bundleIdStartUnderscore",!1):-1!==c.indexOf("-")?d.$setValidity("bundleIdDash",!1):c.match(/[^A-Za-z0-9_.]/)?d.$setValidity("bundleIdCharacters",!1):c.match(/^[^A-Za-z]/)?d.$setValidity("bundleIdBeginNonLetter",!1):c.match(/\.[^A-Za-z]/)&&d.$setValidity("bundleIdPeriodNonLetter",!1):d.$setValidity("bundleIdPeriod",!1))}e(d.$viewValue),a.$watch(function(){return d.$viewValue},e)}}}),angular.module("ut.cloudbuild.setup").directive("validatebundleidios",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){function e(a){d.$setValidity("bundleIdPeriod",!0),d.$setValidity("bundleIdDoublePeriod",!0),d.$setValidity("bundleIdCharacters",!0),d.$setValidity("bundleIdEndPeriod",!0),d.$setValidity("bundleIdStartUnderscore",!0);var c=b.val();c&&0!==c.length&&(c.match(/\./)?c.match(/\.\./)?d.$setValidity("bundleIdDoublePeriod",!1):"."===c.substring(c.length-1,c.length)?d.$setValidity("bundleIdEndPeriod",!1):0===c.indexOf("_")?d.$setValidity("bundleIdStartUnderscore",!1):c.match(/[^A-Za-z0-9.\-]/)&&d.$setValidity("bundleIdCharacters",!1):d.$setValidity("bundleIdPeriod",!1))}e(d.$viewValue),a.$watch(function(){return d.$viewValue},e)}}}),angular.module("ut.cloudbuild.setup").controller("ProjectSetupBasicCtrl",["$stateParams","$scope","$state","$timeout","modals","setupConstants","cloudBuildService",function(a,b,c,d,e,f,g){function h(a){return{name:a.name,settings:{remoteCacheStrategy:a.settings.remoteCacheStrategy}}}function i(){c.go("generic.build.project.targets")}function j(){angular.merge(b.project,k)}b.isEditing=!0,b.initialRemoteCacheStrategy=b.project.settings.remoteCacheStrategy;var k=h(b.project);b.$on("$destroy",j),b.nextStep=function(){var a=h(b.project),c=g.projects.edit(b.project.orgid,b.project.projectid,a),d=e.progress("Saving...");c.then(function(a){angular.merge(b.project,h(a)),k=h(b.project),i(a)}).catch(function(a){e.error("Failed to update project settings: "+a.data.error)}).finally(function(){d.close()})},b.goBack=function(){return j(),_.get(b,"buildTargets",[]).length>0?c.go("generic.build.project.targets"):c.go("generic.build.project.setup.scm")}}]),angular.module("ut.cloudbuild.setup.scm",[]).directive("validatescmurl",["$timeout","$parse",function(a,b){return{restrict:"A",require:"ngModel",link:function(a,c,d,e){function f(c){if(e.$setValidity("scmValidProtocol",!0),"hg"===b(d.validatescmurl)(a)&&c){var f=c.match("^(.*)://");f&&f.length>1&&"http"!==f[1]&&"https"!==f[1]&&e.$setValidity("scmValidProtocol",!1)}}f(e.$viewValue),a.$watch(function(){return e.$viewValue},f),a.$watch(function(){return b(d.validatescmurl)(a)},function(){f(e.$viewValue)})}}}]),angular.module("ut.cloudbuild.setup.scm").service("scmUtils",["$q","cloudBuildService",function(a,b){var c={repoTypes:[{name:"GIT",value:"git"},{name:"SVN",value:"svn"},{name:"Perforce",value:"p4"},{name:"Mercurial",value:"hg"},{name:"Collab",value:"collab"}],repoHosts:[{name:"GitHub"},{name:"BitBucket"},{name:"Beanstalk"},{name:"Assembla"},{name:"Other"}]};return{data:function(){return c},detectScmType:function(a){return a?(a=a.toLowerCase(),-1!==a.indexOf("git@")||-1!==a.indexOf(".git")||-1!==a.indexOf("git://")||-1!==a.indexOf("github.com")?"git":-1!==a.indexOf("svn://")||-1!==a.indexOf("/svn")?"svn":-1!==a.indexOf("p4.")||-1!==a.indexOf("perforce.")||-1!==a.indexOf(":1666")?"p4":null):null},detectScmHost:function(a){return a=a||"",a=a.toLowerCase(),-1!==a.indexOf("github")?"GitHub":-1!==a.indexOf("bitbucket")?"BitBucket":-1!==a.indexOf("beanstalk")?"Beanstalk":-1!==a.indexOf("assembla")?"Assembla":"Other"},getScmTypeNameFromType:function(a){var b=c.repoTypes,d=null;return b.forEach(function(b){b.value===a&&(d=b.name)}),d||b[0].name},getScmBranches:function(c){switch(_.get(c,"project.settings.scm.type")){case"git":return b.projects.scm.gitListBranches(c.project.orgid,c.project.projectid).then(function(a){if(a&&0!==a.length){c.branches=a;var b=_.get(c,"target.settings.scm.branch",null);1===c.branches.length&&_.isEmpty(b)&&_.set(c.target,"settings.scm.branch",c.branches[0])}else c.showError("This appears to be an empty Git repo without any branches. Add project files to this repo to proceed.")}).catch(function(a){c.showError(a.message)});case"hg":var d={scm:{branch:"default"}};return c.target.settings=_.get(c,"target.settings",d),a.when();case"p4":return b.projects.scm.p4ListClients(c.project.orgid,c.project.projectid).then(function(a){if(a&&0!==a.length){c.clients=a;var b=_.get(c,"target.settings.scm.client",null);1===c.clients.length&&_.isEmpty(b)&&_.set(c.target,"settings.scm.client",c.clients[0])}else c.showError("This appears to be a p4 repo without any clients. Add at least one client to this repo to proceed.")}).catch(function(a){c.showError(a.message)})}return a.when()}}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupScmBaseCtrl",["$stateParams","$scope","$state","cloudBuildService",function(a,b,c,d){b.saveScmSettings=function(){var a={settings:{scm:b.project.newSettings.scm}},e=b.isEditing;d.projects.edit(b.orgId,b.projectId,a).then(function(a){b.project.settings=a.settings,e?c.go("generic.build.project.targets"):c.go("generic.build.project.setup.platform_select")}).catch(function(a){b.showError("An error occurred while saving the project settings.")}).finally(function(){b.setProcessing(!1)})}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupStep01Ctrl",["$stateParams","$scope","$state","$controller","scmUtils","cloudBuildService",function(a,b,c,d,e,f){d("ProjectSetupScmBaseCtrl",{$scope:b}),b.project.newSettings||(b.project.newSettings={},b.project.newSettings.scm=_.merge({},b.project.settings.scm)),b.repoTypes=_.clone(e.data().repoTypes),b.repoHosts=e.data().repoHosts,b.$watch("project.newSettings.scm.url",function(a,c){var d=e.detectScmType(a);d&&(b.project.newSettings.scm.type=d)}),b.$watch("project.newSettings.scm.type",function(a,c){"collab"===a&&(b.project.newSettings.scm.url="Unity Collab")}),b.canContinueToNextStep=function(){if(!b.reposetup.$valid)return!1;var a=b.project.newSettings.scm;return a.url&&a.type},b.nextStep=function(){b.setProcessing(!0),b.clearError();var a=[];b.plan&&b.plan.effective&&(a=b.plan.effective.scmTypes||[]);var d=b.project.newSettings.scm.type;if(a&&a.length>0&&-1===a.indexOf(d)){var g=e.getScmTypeNameFromType(d);return void b.showError(g+" is not supported in your current Billing Plan. <a ui-sref='generic.plans'>Please upgrade</a> your plan to continue.")}var h={type:b.project.newSettings.scm.type,url:b.project.newSettings.scm.url,user:"",pass:""};f.projects.scm.checkUrl(b.project.orgid,b.project.projectid,h).then(function(a){b.project.newSettings.scm.url=a.normalizedUrl,b.project.newSettings.scm.ticket=a.ticket,b.project.newSettings.scm.fingerprint=a.fingerprint,a.isAccessible?b.saveScmSettings():(b.setProcessing(!1),c.go("generic.build.project.setup.scm_access"))},function(a){b.setProcessing(!1);var c=a.data&&a.data.error?a.data.error:"We were not able to connect to your URL.";b.showError(c)})},b.project.serviceFlags.collab?b.project.newSettings.scm.type||(b.project.newSettings.scm.type="collab",b.project.newSettings.scm.url="Unity Collab",b.nextStep()):b.repoTypes=_.reject(b.repoTypes,{value:"collab"})}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupStep02Ctrl",["$stateParams","$scope","$state","$controller","scmUtils","cloudBuildService",function(a,b,c,d,e,f){if(!b.project.newSettings||!b.project.newSettings.scm||!b.project.newSettings.scm.type)return void c.go("generic.build.project.setup.scm");b.project.newSettings.scm.pass=b.project.settings.scm.pass,b.initialPass=b.project.newSettings.scm.pass,b.project.newSettings.scm.p4authtype=void 0!==b.project.newSettings.scm.p4authtype?b.project.newSettings.scm.p4authtype:"ticket",b.p4AuthTypes=[{value:"ticket",text:"Ticket"},{value:"password",text:"Password"}],d("ProjectSetupScmBaseCtrl",{$scope:b}),b.repoTypeName=e.getScmTypeNameFromType(b.project.newSettings.scm.type),b.repoHost=e.detectScmHost(b.project.newSettings.scm.url),b.sshPublicKey="Loading...",f.projects.sshkey(b.project.orgid,b.project.projectid).then(function(a){b.sshPublicKey=a.publickey},function(a){b.sshPublicKey="Error loading SSH Key!"}),b.canContinueToNextStep=function(){var a=b.project.newSettings.scm;return"git"===a.type||a.user&&a.pass},b.nextStep=function(){b.setProcessing(!0),b.clearError(),b.project.newSettings.scm.pass===b.initialPass&&delete b.project.newSettings.scm.pass;var a="Repo is not accessible. Please check your URL and repo settings.";f.projects.scm.checkUrl(b.project.orgid,b.project.projectid,b.project.newSettings.scm).then(function(c){c.isAccessible?(c.capturedInfo&&(b.project.newSettings.scm.fingerprint=c.capturedInfo.fingerprint),b.saveScmSettings()):(b.setProcessing(!1),b.showError(a,c.errorMessages))},function(c){b.setProcessing(!1),b.showError(a)})}}]),angular.module("ut.cloudbuild.setup.advanced",["ut.unityeditor-components.unity-versions"]).controller("ProjectSetupTargetAdvancedCtrl",["$stateParams","$scope","$state","$timeout","modals","setupConstants","unityVersionService","cloudBuildService","ENV",function(a,b,c,d,e,f,g,h,i){b.constants=_.merge({},f),b.ENV=i,b.isEditing=!0,b.form={},b.buildSystems=[{name:"Internal",value:"internal"},{name:"Gradle",value:"gradle"}],b.getValueFromPath=function(a,c,d){var e=!1;return c.split(".").reduce(function(a,c){return!e&&a.hasOwnProperty(c)?(b.hasCustomConfig=!0,a[c]):(e=!0,d)},a)},b.saveBuildTarget=function(a){var d=b.target.buildtargetid,f=h.projects.updateBuildTarget(b.project.orgid,b.project.projectid,d,a),g=e.progress("Saving...");g.opened.then(function(){return f}).then(function(a){b.updateBuildTargetInScope(d,a),c.go("generic.build.project.targets")}).catch(function(a){e.error("Failed to update build target: "+a.data.error)}).finally(g.close)},b.executableName=b.target.settings.executablename;var j=b.target.settings.advanced||{};b.preExportMethod=b.getValueFromPath(j,"unity.preExportMethod",""),b.postExportMethod=b.getValueFromPath(j,"unity.postExportMethod",""),b.preBuildScript=b.getValueFromPath(j,"unity.preBuildScript",""),b.postBuildScript=b.getValueFromPath(j,"unity.postBuildScript",""),b.scenes=b.getValueFromPath(j,"unity.playerExporter.sceneList",[]),b.buildOptions=b.getValueFromPath(j,"unity.playerExporter.buildOptions",[]),b.buildForDebug=-1!==b.buildOptions.indexOf("Development"),b.splitBinaryBuild=b.getValueFromPath(j,"unity.playerSettings.Android.useAPKExpansionFiles",!1),b.hadSplitBinaryBuild=b.splitBinaryBuild,b.hadAndroidBui