m)}b.$watch("buildForDebug",function(a,c){if(a)-1===b.buildOptions.indexOf("Development")&&(b.buildOptions.push("Development"),b.buildOptions.push("AllowDebugging"));else{var d=b.buildOptions.indexOf("Development");-1!==d&&b.buildOptions.splice(d,1);var e=b.buildOptions.indexOf("AllowDebugging");-1!==e&&b.buildOptions.splice(e,1)}}),b.addCustomDefine=function(){var a=b.customDefinesText||"";a=a.replace(/;/g,""),a=a.trim(),a&&-1===b.customDefines.indexOf(a)&&b.customDefines.push(a),b.customDefinesText=""},b.removeCustomDefine=function(a){b.customDefines.splice(a,1)},b.addScene=function(){var a=b.scenesText||"";"/"===a.substr(0,1)&&(a=a.substr(1,a.length-1)),(a=a.trim())&&("Assets/"!==a.substr(0,7)&&(a="Assets/"+a),-1===a.indexOf(".unity")&&(a+=".unity"),a&&-1===b.scenes.indexOf(a)&&b.scenes.push(a),b.scenesText="")},b.removeScene=function(a){b.scenes.splice(a,1)},b.canContinueToNextStep=function(){return!0},b.nextStep=function(){var a=b.customDefines.join("; "),c={settings:{advanced:{unity:{preExportMethod:b.preExportMethod,postExportMethod:b.postExportMethod,preBuildScript:b.preBuildScript,postBuildScript:b.postBuildScript,scriptingDefineSymbols:a,playerExporter:{sceneList:b.scenes,buildOptions:b.buildOptions}}}}};b.executableName&&(c.settings.executablename=b.executableName),(b.splitBinaryBuild||b.hadSplitBinaryBuild)&&(c.settings.advanced.unity.playerSettings={Android:{useAPKExpansionFiles:b.splitBinaryBuild}}),b.saveBuildTarget(c)}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupTargetAssetBundlesCtrl",["$scope","$controller",function(a,b){b("ProjectSetupTargetAdvancedCtrl",{$scope:a});var c=a.target.settings.advanced||{};a.buildAssetBundles=a.getValueFromPath(c,"unity.assetBundles.buildBundles",!1),a.bundlesBasePath=a.getValueFromPath(c,"unity.assetBundles.basePath",""),a.copyToStreamingAssets=a.getValueFromPath(c,"unity.assetBundles.copyToStreamingAssets",!1);var d=a.getValueFromPath(c,"unity.assetBundles.buildAssetBundleOptions","");a.compression="",a.buildAssetBundleOptions={},_.each(d.split(","),function(b){if("ChunkBasedCompression"===(b=b.trim())||"UncompressedAssetBundle"===b)return void(a.compression=b);a.buildAssetBundleOptions[b]=!0}),a.copyBundlePatterns=_.uniq(a.getValueFromPath(c,"unity.assetBundles.copyBundlePatterns",[])),a.addFilePattern=function(){var b=a.copyFilePatternText||"";b.replace(/[\n]+/g,""),a.copyBundlePatterns.indexOf(b)<0&&a.copyBundlePatterns.push(b),a.copyFilePatternText=""},a.removeFilePattern=function(b){var c=a.copyBundlePatterns.indexOf(b);a.copyBundlePatterns.splice(c,1)},a.nextStep=function(){var b=a.bundlesBasePath||"";b=b.replace(/^\/+/,""),a.buildAssetBundleOptions=_.omit(a.buildAssetBundleOptions,function(a,b){return!a||_.isEmpty(b)});var c=Object.keys(a.buildAssetBundleOptions);a.compression&&c.push(a.compression);var d={settings:{advanced:{unity:{assetBundles:{buildBundles:a.buildAssetBundles,copyToStreamingAssets:a.copyToStreamingAssets,copyBundlePatterns:a.copyBundlePatterns,buildAssetBundleOptions:c.join(","),basePath:b}}}}};a.saveBuildTarget(d)}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupTargetBasicCtrl",["$stateParams","$scope","$state","$timeout","modals","setupConstants","cloudBuildService","buildConstants","scmUtils","unityVersionService",function(a,b,c,d,e,f,g,h,i,j){function k(a){b.needsCredentials()?c.go("generic.build.project.setup.target.credentials",{targetId:a.buildtargetid,new:!0}):b.isEditing?c.go("generic.build.project.targets"):b.startBuilds(a.buildtargetid,!1)}b.constants=_.merge({},f);var l=a.targetId;if(l)b.isEditing=!0;else{b.isEditing=!1;var m=b.target&&b.target.settings&&b.target.settings.unityVersion;if(b.target={platform:"",name:"",enabled:!0,settings:{autoBuild:!0,remoteCacheStrategy:"library",unityVersion:m,scm:{}}},a.platform){b.target.settings.unityVersion||j.getLatestValidVersion(a.platform).then(function(a){b.target.settings.unityVersion=a}),b.target.platform=a.platform;var n=_.find(f.platforms,{value:a.platform}),o=n?n.name:a.platform;b.target.name="Default "+o}}"hg"===b.project.settings.scm.type?b.target.settings.scm.branch=b.target.settings.scm.branch||"default":i.getScmBranches(b),b.gitBranchModal=function(){e.gitBranchSelect(b.project,b.target).result.then(function(a){b.target.settings.scm.branch=a})},b.svnFolderModal=function(){e.svnFolderSelect(b.project,b.target).result.then(function(a){b.target.settings.scm.branch=a})},b.p4ClientModal=function(){e.p4ClientSelect(b.project,b.target).result.then(function(a){b.target.settings.scm.client=a})},b.needsCredentials=function(){var a=b.target;return("android"===a.platform||"ios"===a.platform)&&(!b.isEditing||(!a.credentials||!a.credentials.signing||!a.credentials.signing.credentialid))},b.WebGlSupportCheck=function(){return"webgl"!==b.target.platform||!b.target.settings.unityVersion.match(/^4_/)&&"latest"!==b.target.settings.unityVersion},b.canContinueToNextStep=function(){var a=!1;if("p4"!==b.project.settings.scm.type&&"collab"!==b.project.settings.scm.type&&(a=!b.target.settings.scm.branch),"p4"===b.project.settings.scm.type){if(!b.target.settings.scm.client)return!1}else if(a||!b.WebGlSupportCheck())return!1;return b.target.platform&&b.target.name},b.nextStep=function(){var a=null;a=b.isEditing?g.projects.updateBuildTarget(b.project.orgid,b.project.projectid,b.target.buildtargetid,b.target):g.projects.createBuildTarget(b.project.orgid,b.project.projectid,b.target);var c=e.progress("Saving...");a.then(function(a){b.updateBuildTargetInScope(l,a),k(a)}).catch(function(a){e.error("Failed to update build target: "+a.data.error)}).finally(function(){c.close()})}}]),angular.module("ut.cloudbuild.setup").value("userAgent",navigator.userAgent).controller("ProjectSetupPlatformSelectCtrl",["$stateParams","$scope","setupConstants","userAgent","unityVersionService",function(a,b,c,d,e){var f=e.userAgentMatch(d);b.platforms=_.filter(c.platforms,function(a){return!(f&&a.version&&!e.isSupported(f,a.version.min,a.version.max,{alpha:!0,beta:!0}))&&!a.hidden})}]),angular.module("ut.cloudbuild.setup").directive("svnpath",["$q","$timeout","cloudBuildService",function(a,b,c){return{require:"ngModel",link:function(b,d,e,f){f.$asyncValidators.svnpath=function(d,e){var f=a.defer();return c.projects.scm.svnListFolders(b.project.orgid,b.project.projectid,e).then(function(a){f.resolve()}).catch(function(a){f.reject()}),f.promise}}}}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupTargetEditCtrl",["$stateParams","$scope","$state","$timeout","modals","cloudBuildService","$q",function(a,b,c,d,e,f,g){var h=g.when(b.buildTargets);(angular.isUndefined(b.buildTargets)||0===b.buildTargets.length)&&(h=f.projects.getBuildTargets(b.orgId,b.projectId)),h.then(function(d){b.buildTargets=d;var f=a.targetId,g=_.find(b.buildTargets,{buildtargetid:f});g?b.target=_.merge({},g):e.error("Build target '"+f+"' does not exist!").result.then(function(){c.go("generic.build.project.targets")})})}]),angular.module("ut.cloudbuild.setup").controller("ProjectSetupTargetTestsCtrl",["$stateParams","$scope","$controller",function(a,b,c){c("ProjectSetupTargetAdvancedCtrl",{$scope:b});var d=b.target.settings.advanced||{};b.runUnitTests=b.getValueFromPath(d,"unity.runUnitTests",!1),b.unitTestMethod=b.getValueFromPath(d,"unity.unitTestMethod","UnityTest.Batch.RunUnitTests"),b.failedUnitTestFailsBuild=b.getValueFromPath(d,"unity.failedUnitTestFailsBuild",!1),b.nextStep=function(){var a={settings:{advanced:{unity:{runUnitTests:b.runUnitTests,unitTestMethod:b.unitTestMethod,failedUnitTestFailsBuild:b.failedUnitTestFailsBuild}}}};b.saveBuildTarget(a)}}]),angular.module("ut.cloudbuild.setup").factory("unityVersionService",["setupConstants","cloudBuildService","$q",function(a,b,c){function d(a,b){var c=[];for(c.push(a),angular.isDefined(b)&&c.push(b);c.length<3;)c.push(p);return c.join(".")}function e(a,b){if(a){return[a[1]||b,a[2]||b,a[3]||b,"A"===a[4],"B"===a[5]]}}function f(a,b,c,d){var f=_.filter(a,function(a){return!!(d&&d.allowHidden||!0!==a.hidden)&&a.va